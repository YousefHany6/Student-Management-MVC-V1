@model FStudentManagement.Models.Course
<link href="~/css/page3.css" rel="stylesheet" />
<div class="container">
 <div class="card mt-5">
  <div class="card-body" dir="rtl">
   <form asp-controller="Courses" asp-action="Create_Course" enctype="multipart/form-data" method="post">
    <div asp-validation-summary="ModelOnly" role="alert"  class="text-danger"></div>
    <div class="row">
     <div class="col-lg-6 col-md-6 col-sm-12">
      <label asp-for="Course_Name" class="form-label">اسم الكورس<span class="text-danger">*</span></label>
      <input asp-for="Course_Name" class="form-control">
      <span asp-validation-for="Course_Name" class="text-danger"></span>
     </div>
     <div class="col-lg-6 col-md-6 col-sm-12">
      <label asp-for="ParentStageId" class="form-label">المرحلة الدراسية<span class="text-danger">*</span></label>
      <select asp-for="ParentStageId" asp-items="ViewBag.parents" class="form-select">
       @{
        var hasParents = (ViewBag.parents as SelectList)?.Any() ?? false;

        if (hasParents)
        {
         <option value="" selected>اختار المرحلة الدراسية</option>
        }
        else
        {
         <option value="" selected>لايوجد مراحل دراسية</option>
        }
       }
      </select>
      <span asp-validation-for="ParentStageId" class="text-danger"></span>
     </div>
    </div>
    <div class="row">
     <div class="col-lg-6 col-md-6 col-sm-12">
      <label asp-for="ChildStageId" class="form-label">السنة الدراسية<span class="text-danger">*</span></label>
      <select asp-for="ChildStageId" asp-items="ViewBag.Childs" class="form-select">
       <option value="">اختار السنة الدراسية</option>
      </select>
      <span asp-validation-for="ChildStageId" class="text-danger"></span>
     </div>
     <div class="col-lg-6 col-md-6 col-sm-12">
      <label asp-for="TermStageId" class="form-label">القسم<span class="text-danger">*</span></label>
      <select asp-for="TermStageId" asp-items="ViewBag.terms" class="form-select">
       <option value="">اختار القسم</option>
      </select>
      <span asp-validation-for="TermStageId" class="text-danger"></span>
     </div>
    </div>
    <div class="con">
     <button class="btn btn-lg btn-primary mt-4 m-auto" type="submit">انشاء</button>
    </div>
   </form>
  </div>
 </div>
</div>


<script>
 document.addEventListener("DOMContentLoaded", function () {
  var parentSelect = document.querySelector('[name="ParentStageId"]');
  var childSelect = document.querySelector('[name="ChildStageId"]');
  var termSelect = document.querySelector('[name="TermStageId"]');

  // Disable child and term selects initially
  childSelect.disabled = true;
  termSelect.disabled = true;

  // Event listener for parent select change
  parentSelect.addEventListener("change", function () {
   var selectedIndex = parentSelect.selectedIndex;
   var selectedParentId = parentSelect.value;

   if (selectedIndex === 0) {
    // If no parent stage is selected
    childSelect.disabled = true;
    termSelect.disabled = true;
   } else {
    // Enable child select
    childSelect.disabled = false;

    // Clear previous options in child and term selects
    childSelect.innerHTML = '<option selected value="">اختر السنة الدراسية</option>';
    termSelect.innerHTML = '<option selected value="">اختر القسم</option>';

    // Fetch data for child based on the selected parent
    fetch('/Teachers/GetChildStages?parentId=' + selectedParentId)
     .then((response) => response.json())
     .then((data) => {
      if (data.length === 0) {
       // If no child data is available, add a default option
       var defaultChildOption = document.createElement("option");
       defaultChildOption.value = "0";
       defaultChildOption.innerHTML = '';

       defaultChildOption.text = "لا يوجد سنة دراسية";
       childSelect.appendChild(defaultChildOption);
       termSelect.disabled = true;
      } else {
       data.forEach((child) => {
        var option = document.createElement("option");
        option.value = child.value;
        option.text = child.text;
        childSelect.appendChild(option);
       });
      }
     })
     .catch((error) => console.log(error));
   }
  });

  // Event listener for child select change
  childSelect.addEventListener("change", function () {
   var selectedIndex = childSelect.selectedIndex;
   var selectedChildId = childSelect.value;

   if (selectedIndex === 0) {
    // If no child stage is selected
    termSelect.disabled = true;
   } else {
    // Enable term select
    termSelect.disabled = false;

    // Clear previous options in term select
    termSelect.innerHTML = '<option selected value="">اختر القسم</option>';

    // Fetch data for terms based on the selected child
    fetch('/Teachers/GetTermStages?childId=' + selectedChildId)
     .then((response) => response.json())
     .then((data) => {
      if (data.length === 0) {
       // If no term data is available, add a default option
       var defaultTermOption = document.createElement("option");
       defaultTermOption.value = "0";
       defaultTermOption.innerHTML = '';

       defaultTermOption.text = "لا يوجد قسم";
       termSelect.appendChild(defaultTermOption);
      } else {
       data.forEach((term) => {
        var option = document.createElement("option");
        option.value = term.value;
        option.text = term.text;
        termSelect.appendChild(option);
       });
      }
     })
     .catch((error) => console.log(error));
   }
  });
 });
</script>



@section Scripts {
 @{
  await Html.RenderPartialAsync("_ValidationScriptsPartial");
 }
}
